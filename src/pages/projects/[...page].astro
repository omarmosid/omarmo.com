---
import type { CollectionEntry } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import ProjectPreview from "@/components/blog/ProjectPreview.astro";
import { getAllProjects, getUniqueTags, getUniqueTechnologies } from "@/data/project";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_PROJECTS_PER_PAGE = 10;
	const MAX_TAGS = 7;
	const allProjects = await getAllProjects();
	const uniqueTags = getUniqueTags(allProjects).slice(0, MAX_TAGS);
	const uniqueTechnologies = getUniqueTechnologies(allProjects).slice(0, MAX_TAGS);
	
	// Sort projects by start date (most recent first)
	const sortedProjects = allProjects.sort((a, b) => {
		return new Date(b.data.startDate).getTime() - new Date(a.data.startDate).getTime();
	});
	
	return paginate(sortedProjects, {
		pageSize: MAX_PROJECTS_PER_PAGE,
		props: { uniqueTags, uniqueTechnologies },
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"project">>;
	uniqueTags: string[];
	uniqueTechnologies: string[];
}

const { page, uniqueTags, uniqueTechnologies } = Astro.props;

const meta = {
	description: "Explore my collection of projects and the technologies I work with",
	title: "Projects",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← Previous Page",
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: "Next Page →",
			url: page.url.next,
		},
	}),
};

// Group projects by featured status
const featuredProjects = page.data.filter(project => project.data.featured);
const otherProjects = page.data.filter(project => !project.data.featured);
---

<PageLayout meta={meta}>
	<h1 class="title mb-6 flex items-center gap-3">
		Projects
		<Icon aria-hidden="true" class="h-6 w-6 text-accent" focusable="false" name="mdi:code-braces" />
	</h1>
	
	<div class="grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8">
		<section aria-label="Projects list">
			{featuredProjects.length > 0 && (
				<>
					<h2 class="title text-lg mb-4">Featured Projects</h2>
					<ul class="mb-16 space-y-6">
						{featuredProjects.map((project) => (
							<li class="rounded-lg border border-gray-200 p-4 dark:border-gray-700">
								<ProjectPreview project={project} withDesc={true} />
							</li>
						))}
					</ul>
				</>
			)}
			
			{otherProjects.length > 0 && (
				<>
					<h2 class="title text-lg mb-4">
						{featuredProjects.length > 0 ? "Other Projects" : "All Projects"}
					</h2>
					<ul class="mb-16 space-y-4">
						{otherProjects.map((project) => (
							<li class="grid gap-2">
								<ProjectPreview project={project} withDesc={false} />
							</li>
						))}
					</ul>
				</>
			)}
			
			<Pagination {...paginationProps} />
		</section>
		
		<aside class="space-y-8">
			{!!uniqueTags.length && (
				<div>
					<h2 class="title mb-4 flex items-center gap-2 text-lg">
						Tags
						<svg
							aria-hidden="true"
							class="h-6 w-6"
							fill="none"
							stroke="currentColor"
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="1.5"
							viewBox="0 0 24 24"
							xmlns="http://www.w3.org/2000/svg"
						>
							<path d="M0 0h24v24H0z" fill="none" stroke="none" />
							<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
							<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
							<path d="M6 9h-.01" />
						</svg>
					</h2>
					<ul class="flex flex-wrap gap-2">
						{uniqueTags.map((tag) => (
							<li>
								<span class="rounded bg-gray-200 px-2 py-1 text-sm text-gray-700 dark:bg-gray-700 dark:text-gray-300">
									#{tag}
								</span>
							</li>
						))}
					</ul>
				</div>
			)}
			
			{!!uniqueTechnologies.length && (
				<div>
					<h2 class="title mb-4 flex items-center gap-2 text-lg">
						Technologies
						<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="mdi:tools" />
					</h2>
					<ul class="flex flex-wrap gap-2">
						{uniqueTechnologies.map((tech) => (
							<li>
								<span class="rounded bg-accent/10 px-2 py-1 text-sm text-accent">
									{tech}
								</span>
							</li>
						))}
					</ul>
				</div>
			)}
		</aside>
	</div>
</PageLayout>
